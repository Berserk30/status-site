version: '2'
services:
  nginx:
    image: nginx:latest
    ports:
      - 5555:5555
    links:
      - "web:web"
      # - "logging:logging"
      - "docs:docs"
    volumes:
      - ./nginx/web.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
      # - logging
      - docs
  docs:
    image: dbogatov/status-site:docs-${DOTNET_TAG} # if DOTNET_TAG not set, use ""
    ports:
      - 5556:80
    restart: on-failure
  web:
    image: dbogatov/status-site:web-${DOTNET_TAG} # if DOTNET_TAG not set, use ""
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - postgres
    links:
      - "postgres:database"
    volumes:
      - ./appsettings.json:/srv/appsettings.production.json
    restart: on-failure
  # logging:
  #   image: dbogatov/status-site:web-${DOTNET_TAG}
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #   depends_on:
  #     - postgres
  #   links:
  #     - "postgres:database"
  #   volumes:
  #     - ./appsettings.json:/srv/appsettings.production.json
  #   restart: on-failure
  daemons:
    image: dbogatov/status-site:daemons-${DOTNET_TAG}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - postgres
    links:
      - "postgres:database"
    volumes:
      - ./appsettings.json:/srv/appsettings.production.json
    restart: on-failure
  postgres:
    image: postgres:latest
    environment: # define connection credentials to be used in app
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
